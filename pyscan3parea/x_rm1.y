
/* *INDENT-OFF* */
%pure_parser
     
     %{
     #include "math.h"
     #include "stdio.h"
     #include "rm1.h"
     #include "x_io1.h"
     #include "rbt.h"
     #include "rbt_shortcuts.h"
     #include "main.h"
     #include "debug.h"
     #include "misc.h"
     #include "goals.h"
     #include "debug2.h"
#ifndef NDEBUG
     #define stderr fp_error
       /*file pointer for error output*/
#endif
       FILE *fp_error;
     /*int flex_used = 0;*/
     %}
     
/*BEGIN tokens DELIMITER*/
	%token TOK_EXIT
	%token TOK_LONGSTRINGLITERALSINGLEQUOTE
	%token TOK_LONGSTRINGLITERALDOUBLEQUOTE
	%token TOK_SHORTSTRINGLITERALSINGLEQUOTE
	%token TOK_SHORTSTRINGLITERALDOUBLEQUOTE
	%token TOK_COMMENT
	%token TOK_INTEGER
	%token TOK_LONGINTEGER
	%token TOK_FLOATNUMBER
	%token TOK_IMAGNUMBER
	%token TOK_SPACE
	%token TOK_NEWLINE
	%token TOK_OP
	%token TOK_CP
	%token TOK_COMMA
	%token TOK_OB
	%token TOK_CB
	%token TOK_FOR
	%token TOK_IF
	%token TOK_AO
	%token TOK_AC
	%token TOK_CO
	%token TOK_BQ
	%token TOK_FS
	%token TOK_FSFSFS
	%token TOK_ST
	%token TOK_STST
	%token TOK_EQ
	%token TOK_MN
	%token TOK_PL
	%token TOK_TL
	%token TOK_DIDI
	%token TOK_DI
	%token TOK_PC
	%token TOK_LTLT
	%token TOK_GTGT
	%token TOK_AS
	%token TOK_EX
	%token TOK_OR
	%token TOK_LT
	%token TOK_GT
	%token TOK_EQEQ
	%token TOK_GTEQ
	%token TOK_LTEQ
	%token TOK_LTGT
	%token TOK_ETEQ
	%token TOK_IS
	%token TOK_NOT
	%token TOK_IN
	%token TOK_WRITTEN_OR
	%token TOK_AND
	%token TOK_LAMBDA
	%token TOK_ASSERT
	%token TOK_PLEQ
	%token TOK_MNEQ
	%token TOK_STEQ
	%token TOK_DIEQ
	%token TOK_PCEQ
	%token TOK_STSTEQ
	%token TOK_GTGTEQ
	%token TOK_LTLTEQ
	%token TOK_ASEQ
	%token TOK_EXEQ
	%token TOK_OREQ
	%token TOK_PASS
	%token TOK_DEL
	%token TOK_PRINT
	%token TOK_RETURN
	%token TOK_YIELD
	%token TOK_RAISE
	%token TOK_BREAK
	%token TOK_CONTINUE
	%token TOK_IMPORT
	%token TOK_WRITTEN_AS
	%token TOK_FROM
	%token TOK_GLOBAL
	%token TOK_EXEC
	%token TOK_SC
	%token TOK_ELIF
	%token TOK_ELSE
	%token TOK_WHILE
	%token TOK_TRY
	%token TOK_EXCEPT
	%token TOK_FINALLY
	%token TOK_WITH
	%token TOK_DEF
	%token TOK_STRUDL
	%token TOK_CLASS
	%token TOK_IDENTIFIER
	%token TOK_ANYCHAR
	%token TOK_INDENT
	%token TOK_DEDENT
	%token TOK_SPACE_INDENT
	%token TOK_SPACE_EMPTY_LINE
	%token TOK_SPACE_NO_INDENT
	%token TOK_NEW_LINE_IGNORED
	%token TOK_SPACE_AT_END_OF_LINE
	%token TOK_SPACE_OTHER
	%token TERMINAL_MAX_MIN_NONTERMINAL
	%token PYTHON_ROOT_SYMBOL_USED_ONLY_IN_PYTHON
	%token NT_ERROR
	%token UNUSED_TOK_EXIT
	%token UNUSED_TOK_LONGSTRINGLITERALSINGLEQUOTE
	%token UNUSED_TOK_LONGSTRINGLITERALDOUBLEQUOTE
	%token UNUSED_TOK_SHORTSTRINGLITERALSINGLEQUOTE
	%token UNUSED_TOK_SHORTSTRINGLITERALDOUBLEQUOTE
	%token UNUSED_TOK_COMMENT
	%token UNUSED_TOK_INTEGER
	%token UNUSED_TOK_LONGINTEGER
	%token UNUSED_TOK_FLOATNUMBER
	%token UNUSED_TOK_IMAGNUMBER
	%token UNUSED_TOK_SPACE
	%token UNUSED_TOK_NEWLINE
	%token UNUSED_TOKEN_OP
	%token UNUSED_TOKEN_CP
	%token UNUSED_TOKEN_COMMA
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOKEN_
	%token UNUSED_TOK_IDENTIFIER
	%token UNUSED_TOK_ANYCHAR
	%token UNUSED_TOK_INDENT
	%token UNUSED_TOK_DEDENT
	%token UNUSED_TOK_DEDENT
	%token UNUSED_TOK_DEDENT
	%token UNUSED_TOK_DEDENT
	%token UNUSED_TOK_DEDENT
	%token UNUSED_TOK_DEDENT
	%token UNUSED_TOK_DEDENT
	%token MAIN_FILE
	%token MAIN_FILE_SEQ_1
	%token MAIN_FILE_SEQ_1_ELM

/*END tokens DELIMITER*/
/* *INDENT-ON* */
     %% /* Grammar rules and actions follow */
/*BEGIN rules DELIMITER*/
python_root_symbol_used_only_in_python: main_file {BISON_NT((MISC_MASTER,PYTHON_ROOT_SYMBOL_USED_ONLY_IN_PYTHON,&$$,2,$1));/*+*/show_rec_except_conn($$);list_n($$);(MISC_MASTER)->top=$$;dump_tree(MISC_MASTER);EXIT_(0);}
| nt_error {BISON_NT((MISC_MASTER,PYTHON_ROOT_SYMBOL_USED_ONLY_IN_PYTHON,&$$,2,$1));/*+*/  error_text(last_symbol_from_an_input_file(MISC_MASTER),"parse error");EXIT_(1);}
;
nt_error: error {BISON_NT((MISC_MASTER,NT_ERROR,&$$,1));/*+*/show($$);$$->sub = NULL; $$->next = NULL;/*DG_ERROR_HANDLING;*/}
;
unused_tok_exit: TOK_EXIT {BISON_NT((MISC_MASTER,UNUSED_TOK_EXIT,&$$,2,$1));}
;
unused_tok_longstringliteralsinglequote: TOK_LONGSTRINGLITERALSINGLEQUOTE {BISON_NT((MISC_MASTER,UNUSED_TOK_LONGSTRINGLITERALSINGLEQUOTE,&$$,2,$1));}
;
unused_tok_longstringliteraldoublequote: TOK_LONGSTRINGLITERALDOUBLEQUOTE {BISON_NT((MISC_MASTER,UNUSED_TOK_LONGSTRINGLITERALDOUBLEQUOTE,&$$,2,$1));}
;
unused_tok_shortstringliteralsinglequote: TOK_SHORTSTRINGLITERALSINGLEQUOTE {BISON_NT((MISC_MASTER,UNUSED_TOK_SHORTSTRINGLITERALSINGLEQUOTE,&$$,2,$1));}
;
unused_tok_shortstringliteraldoublequote: TOK_SHORTSTRINGLITERALDOUBLEQUOTE {BISON_NT((MISC_MASTER,UNUSED_TOK_SHORTSTRINGLITERALDOUBLEQUOTE,&$$,2,$1));}
;
unused_tok_comment: TOK_COMMENT {BISON_NT((MISC_MASTER,UNUSED_TOK_COMMENT,&$$,2,$1));}
;
unused_tok_integer: TOK_INTEGER {BISON_NT((MISC_MASTER,UNUSED_TOK_INTEGER,&$$,2,$1));}
;
unused_tok_longinteger: TOK_LONGINTEGER {BISON_NT((MISC_MASTER,UNUSED_TOK_LONGINTEGER,&$$,2,$1));}
;
unused_tok_floatnumber: TOK_FLOATNUMBER {BISON_NT((MISC_MASTER,UNUSED_TOK_FLOATNUMBER,&$$,2,$1));}
;
unused_tok_imagnumber: TOK_IMAGNUMBER {BISON_NT((MISC_MASTER,UNUSED_TOK_IMAGNUMBER,&$$,2,$1));}
;
unused_tok_space: TOK_SPACE {BISON_NT((MISC_MASTER,UNUSED_TOK_SPACE,&$$,2,$1));}
;
unused_tok_newline: TOK_NEWLINE {BISON_NT((MISC_MASTER,UNUSED_TOK_NEWLINE,&$$,2,$1));}
;
unused_token_op: TOK_OP {BISON_NT((MISC_MASTER,UNUSED_TOKEN_OP,&$$,2,$1));}
;
unused_token_cp: TOK_CP {BISON_NT((MISC_MASTER,UNUSED_TOKEN_CP,&$$,2,$1));}
;
unused_token_comma: TOK_COMMA {BISON_NT((MISC_MASTER,UNUSED_TOKEN_COMMA,&$$,2,$1));}
;
unused_token_: TOK_OB {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_CB {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_FOR {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_IF {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_AO {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_AC {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_CO {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_BQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_FS {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_FSFSFS {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_ST {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_STST {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_EQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_MN {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_PL {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_TL {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_DIDI {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_DI {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_PC {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_LTLT {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_GTGT {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_AS {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_EX {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_OR {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_LT {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_GT {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_EQEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_GTEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_LTEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_LTGT {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_ETEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_IS {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_NOT {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_IN {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_WRITTEN_OR {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_AND {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_LAMBDA {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_ASSERT {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_PLEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_MNEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_STEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_DIEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_PCEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_STSTEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_GTGTEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_LTLTEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_ASEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_EXEQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_OREQ {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_PASS {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_DEL {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_PRINT {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_RETURN {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_YIELD {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_RAISE {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_BREAK {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_CONTINUE {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_IMPORT {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_WRITTEN_AS {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_FROM {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_GLOBAL {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_EXEC {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_SC {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_ELIF {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_ELSE {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_WHILE {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_TRY {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_EXCEPT {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_FINALLY {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_WITH {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_DEF {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_STRUDL {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_token_: TOK_CLASS {BISON_NT((MISC_MASTER,UNUSED_TOKEN_,&$$,2,$1));}
;
unused_tok_identifier: TOK_IDENTIFIER {BISON_NT((MISC_MASTER,UNUSED_TOK_IDENTIFIER,&$$,2,$1));}
;
unused_tok_anychar: TOK_ANYCHAR {BISON_NT((MISC_MASTER,UNUSED_TOK_ANYCHAR,&$$,2,$1));}
;
unused_tok_indent: TOK_INDENT {BISON_NT((MISC_MASTER,UNUSED_TOK_INDENT,&$$,2,$1));}
;
unused_tok_dedent: TOK_DEDENT {BISON_NT((MISC_MASTER,UNUSED_TOK_DEDENT,&$$,2,$1));}
;
unused_tok_dedent: TOK_SPACE_INDENT {BISON_NT((MISC_MASTER,UNUSED_TOK_DEDENT,&$$,2,$1));}
;
unused_tok_dedent: TOK_SPACE_EMPTY_LINE {BISON_NT((MISC_MASTER,UNUSED_TOK_DEDENT,&$$,2,$1));}
;
unused_tok_dedent: TOK_SPACE_NO_INDENT {BISON_NT((MISC_MASTER,UNUSED_TOK_DEDENT,&$$,2,$1));}
;
unused_tok_dedent: TOK_NEW_LINE_IGNORED {BISON_NT((MISC_MASTER,UNUSED_TOK_DEDENT,&$$,2,$1));}
;
unused_tok_dedent: TOK_SPACE_AT_END_OF_LINE {BISON_NT((MISC_MASTER,UNUSED_TOK_DEDENT,&$$,2,$1));}
;
unused_tok_dedent: TOK_SPACE_OTHER {BISON_NT((MISC_MASTER,UNUSED_TOK_DEDENT,&$$,2,$1));}
;
main_file: main_file_seq_1 TOK_EXIT {BISON_NT((MISC_MASTER,MAIN_FILE,&$$,3,$1,$2));}
;
main_file_seq_1: main_file_seq_1_elm {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1,&$$,2,$1));}
| main_file_seq_1 main_file_seq_1_elm {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1,&$$,3,$1,$2));}
;
main_file_seq_1_elm: TOK_IMAGNUMBER {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_INTEGER {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_COMMENT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_LONGINTEGER {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_FLOATNUMBER {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_IDENTIFIER {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_LONGSTRINGLITERALSINGLEQUOTE {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_LONGSTRINGLITERALDOUBLEQUOTE {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_SHORTSTRINGLITERALSINGLEQUOTE {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_SHORTSTRINGLITERALDOUBLEQUOTE {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_CP {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_OP {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_NEWLINE {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_SPACE {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_CLASS {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_STRUDL {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_DEF {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_WITH {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_FINALLY {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_EXCEPT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_TRY {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_WHILE {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_ELSE {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_ELIF {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_CO {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_IF {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_SC {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_EXEC {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_GLOBAL {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_FROM {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_WRITTEN_AS {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_IMPORT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_CONTINUE {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_BREAK {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_RAISE {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_YIELD {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_RETURN {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_PRINT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_DEL {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_PASS {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_OREQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_EXEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_ASEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_LTLTEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_GTGTEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_STSTEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_PCEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_DIEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_STEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_MNEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_PLEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_ASSERT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_LAMBDA {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_AND {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_WRITTEN_OR {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_IN {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_NOT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_IS {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_ETEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_LTGT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_LTEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_GTEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_EQEQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_GT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_LT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_OR {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_EX {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_AS {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_GTGT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_LTLT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_PC {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_DI {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_DIDI {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_TL {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_PL {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_MN {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_EQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_STST {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_ST {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_FSFSFS {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_FS {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_BQ {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_AC {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_AO {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_FOR {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_CB {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_OB {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_COMMA {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_ANYCHAR {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_INDENT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
| TOK_DEDENT {BISON_NT((MISC_MASTER,MAIN_FILE_SEQ_1_ELM,&$$,2,$1));}
;

/*END rules DELIMITER*/

     %%
          

/*BEGIN token_table DELIMITER*/
	token_table_t token_table[]  = {{ TOK_EXIT ,"TOK_EXIT"},
{ TOK_LONGSTRINGLITERALSINGLEQUOTE ,"TOK_LONGSTRINGLITERALSINGLEQUOTE"},
{ TOK_LONGSTRINGLITERALDOUBLEQUOTE ,"TOK_LONGSTRINGLITERALDOUBLEQUOTE"},
{ TOK_SHORTSTRINGLITERALSINGLEQUOTE ,"TOK_SHORTSTRINGLITERALSINGLEQUOTE"},
{ TOK_SHORTSTRINGLITERALDOUBLEQUOTE ,"TOK_SHORTSTRINGLITERALDOUBLEQUOTE"},
{ TOK_COMMENT ,"TOK_COMMENT"},
{ TOK_INTEGER ,"TOK_INTEGER"},
{ TOK_LONGINTEGER ,"TOK_LONGINTEGER"},
{ TOK_FLOATNUMBER ,"TOK_FLOATNUMBER"},
{ TOK_IMAGNUMBER ,"TOK_IMAGNUMBER"},
{ TOK_SPACE ,"TOK_SPACE"},
{ TOK_NEWLINE ,"TOK_NEWLINE"},
{ TOK_OP ,"TOK_OP"},
{ TOK_CP ,"TOK_CP"},
{ TOK_COMMA ,"TOK_COMMA"},
{ TOK_OB ,"TOK_OB"},
{ TOK_CB ,"TOK_CB"},
{ TOK_FOR ,"TOK_FOR"},
{ TOK_IF ,"TOK_IF"},
{ TOK_AO ,"TOK_AO"},
{ TOK_AC ,"TOK_AC"},
{ TOK_CO ,"TOK_CO"},
{ TOK_BQ ,"TOK_BQ"},
{ TOK_FS ,"TOK_FS"},
{ TOK_FSFSFS ,"TOK_FSFSFS"},
{ TOK_ST ,"TOK_ST"},
{ TOK_STST ,"TOK_STST"},
{ TOK_EQ ,"TOK_EQ"},
{ TOK_MN ,"TOK_MN"},
{ TOK_PL ,"TOK_PL"},
{ TOK_TL ,"TOK_TL"},
{ TOK_DIDI ,"TOK_DIDI"},
{ TOK_DI ,"TOK_DI"},
{ TOK_PC ,"TOK_PC"},
{ TOK_LTLT ,"TOK_LTLT"},
{ TOK_GTGT ,"TOK_GTGT"},
{ TOK_AS ,"TOK_AS"},
{ TOK_EX ,"TOK_EX"},
{ TOK_OR ,"TOK_OR"},
{ TOK_LT ,"TOK_LT"},
{ TOK_GT ,"TOK_GT"},
{ TOK_EQEQ ,"TOK_EQEQ"},
{ TOK_GTEQ ,"TOK_GTEQ"},
{ TOK_LTEQ ,"TOK_LTEQ"},
{ TOK_LTGT ,"TOK_LTGT"},
{ TOK_ETEQ ,"TOK_ETEQ"},
{ TOK_IS ,"TOK_IS"},
{ TOK_NOT ,"TOK_NOT"},
{ TOK_IN ,"TOK_IN"},
{ TOK_WRITTEN_OR ,"TOK_WRITTEN_OR"},
{ TOK_AND ,"TOK_AND"},
{ TOK_LAMBDA ,"TOK_LAMBDA"},
{ TOK_ASSERT ,"TOK_ASSERT"},
{ TOK_PLEQ ,"TOK_PLEQ"},
{ TOK_MNEQ ,"TOK_MNEQ"},
{ TOK_STEQ ,"TOK_STEQ"},
{ TOK_DIEQ ,"TOK_DIEQ"},
{ TOK_PCEQ ,"TOK_PCEQ"},
{ TOK_STSTEQ ,"TOK_STSTEQ"},
{ TOK_GTGTEQ ,"TOK_GTGTEQ"},
{ TOK_LTLTEQ ,"TOK_LTLTEQ"},
{ TOK_ASEQ ,"TOK_ASEQ"},
{ TOK_EXEQ ,"TOK_EXEQ"},
{ TOK_OREQ ,"TOK_OREQ"},
{ TOK_PASS ,"TOK_PASS"},
{ TOK_DEL ,"TOK_DEL"},
{ TOK_PRINT ,"TOK_PRINT"},
{ TOK_RETURN ,"TOK_RETURN"},
{ TOK_YIELD ,"TOK_YIELD"},
{ TOK_RAISE ,"TOK_RAISE"},
{ TOK_BREAK ,"TOK_BREAK"},
{ TOK_CONTINUE ,"TOK_CONTINUE"},
{ TOK_IMPORT ,"TOK_IMPORT"},
{ TOK_WRITTEN_AS ,"TOK_WRITTEN_AS"},
{ TOK_FROM ,"TOK_FROM"},
{ TOK_GLOBAL ,"TOK_GLOBAL"},
{ TOK_EXEC ,"TOK_EXEC"},
{ TOK_SC ,"TOK_SC"},
{ TOK_ELIF ,"TOK_ELIF"},
{ TOK_ELSE ,"TOK_ELSE"},
{ TOK_WHILE ,"TOK_WHILE"},
{ TOK_TRY ,"TOK_TRY"},
{ TOK_EXCEPT ,"TOK_EXCEPT"},
{ TOK_FINALLY ,"TOK_FINALLY"},
{ TOK_WITH ,"TOK_WITH"},
{ TOK_DEF ,"TOK_DEF"},
{ TOK_STRUDL ,"TOK_STRUDL"},
{ TOK_CLASS ,"TOK_CLASS"},
{ TOK_IDENTIFIER ,"TOK_IDENTIFIER"},
{ TOK_ANYCHAR ,"TOK_ANYCHAR"},
{ TOK_INDENT ,"TOK_INDENT"},
{ TOK_DEDENT ,"TOK_DEDENT"},
{ TOK_SPACE_INDENT ,"TOK_SPACE_INDENT"},
{ TOK_SPACE_EMPTY_LINE ,"TOK_SPACE_EMPTY_LINE"},
{ TOK_SPACE_NO_INDENT ,"TOK_SPACE_NO_INDENT"},
{ TOK_NEW_LINE_IGNORED ,"TOK_NEW_LINE_IGNORED"},
{ TOK_SPACE_AT_END_OF_LINE ,"TOK_SPACE_AT_END_OF_LINE"},
{ TOK_SPACE_OTHER ,"TOK_SPACE_OTHER"},
{ PYTHON_ROOT_SYMBOL_USED_ONLY_IN_PYTHON ,"PYTHON_ROOT_SYMBOL_USED_ONLY_IN_PYTHON"},
{ NT_ERROR ,"NT_ERROR"},
{ UNUSED_TOK_EXIT ,"UNUSED_TOK_EXIT"},
{ UNUSED_TOK_LONGSTRINGLITERALSINGLEQUOTE ,"UNUSED_TOK_LONGSTRINGLITERALSINGLEQUOTE"},
{ UNUSED_TOK_LONGSTRINGLITERALDOUBLEQUOTE ,"UNUSED_TOK_LONGSTRINGLITERALDOUBLEQUOTE"},
{ UNUSED_TOK_SHORTSTRINGLITERALSINGLEQUOTE ,"UNUSED_TOK_SHORTSTRINGLITERALSINGLEQUOTE"},
{ UNUSED_TOK_SHORTSTRINGLITERALDOUBLEQUOTE ,"UNUSED_TOK_SHORTSTRINGLITERALDOUBLEQUOTE"},
{ UNUSED_TOK_COMMENT ,"UNUSED_TOK_COMMENT"},
{ UNUSED_TOK_INTEGER ,"UNUSED_TOK_INTEGER"},
{ UNUSED_TOK_LONGINTEGER ,"UNUSED_TOK_LONGINTEGER"},
{ UNUSED_TOK_FLOATNUMBER ,"UNUSED_TOK_FLOATNUMBER"},
{ UNUSED_TOK_IMAGNUMBER ,"UNUSED_TOK_IMAGNUMBER"},
{ UNUSED_TOK_SPACE ,"UNUSED_TOK_SPACE"},
{ UNUSED_TOK_NEWLINE ,"UNUSED_TOK_NEWLINE"},
{ UNUSED_TOKEN_OP ,"UNUSED_TOKEN_OP"},
{ UNUSED_TOKEN_CP ,"UNUSED_TOKEN_CP"},
{ UNUSED_TOKEN_COMMA ,"UNUSED_TOKEN_COMMA"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOKEN_ ,"UNUSED_TOKEN_"},
{ UNUSED_TOK_IDENTIFIER ,"UNUSED_TOK_IDENTIFIER"},
{ UNUSED_TOK_ANYCHAR ,"UNUSED_TOK_ANYCHAR"},
{ UNUSED_TOK_INDENT ,"UNUSED_TOK_INDENT"},
{ UNUSED_TOK_DEDENT ,"UNUSED_TOK_DEDENT"},
{ UNUSED_TOK_DEDENT ,"UNUSED_TOK_DEDENT"},
{ UNUSED_TOK_DEDENT ,"UNUSED_TOK_DEDENT"},
{ UNUSED_TOK_DEDENT ,"UNUSED_TOK_DEDENT"},
{ UNUSED_TOK_DEDENT ,"UNUSED_TOK_DEDENT"},
{ UNUSED_TOK_DEDENT ,"UNUSED_TOK_DEDENT"},
{ UNUSED_TOK_DEDENT ,"UNUSED_TOK_DEDENT"},
{ MAIN_FILE ,"MAIN_FILE"},
{ MAIN_FILE_SEQ_1 ,"MAIN_FILE_SEQ_1"},
{ MAIN_FILE_SEQ_1_ELM ,"MAIN_FILE_SEQ_1_ELM"},
{0,NULL}};

/*END token_table DELIMITER*/     


